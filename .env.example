# .env.example

# This file is an example of environment variables needed for the AI-Powered Travel Planner Assistant.
# Create a file named `.env` in the root directory of your project (same level as docker-compose.yml)
# and copy these variables into it, replacing the placeholder values with your actual keys.
# This file should NOT be committed to version control. It is already listed in .gitignore.

# --- Core Application Settings ---

# Google Gemini API Key
# Obtain this from Google AI Studio: https://aistudio.google.com/app/apikey
# This key is crucial for the AI agents to function and interact with the LLM.
GEMINI_API_KEY=YOUR_GOOGLE_GEMINI_API_KEY_HERE

# Application Log Level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
# Controls the verbosity of logs printed to the console/stdout.
# Set to DEBUG for detailed development logs.
LOG_LEVEL=INFO

# --- Flask Application Settings (if running directly or via Docker Compose) ---

# Flask Debug Mode (0 for production, 1 for development)
# When set to 1, Flask provides a debugger and reloader.
# DO NOT set to 1 in a production environment as it can expose sensitive information.
FLASK_DEBUG=1

# Flask Run Host (usually 0.0.0.0 to listen on all available network interfaces)
# FLASK_RUN_HOST=0.0.0.0

# Flask Run Port (default for Flask is 5000)
# PORT=5000

# --- Simulated Data Paths (used by agents/tools) ---
# These paths are relative to the project root.
# The `data/` directory should contain the mock JSON files.
# SIMULATED_FLIGHT_DATA_PATH=data/mock_flights.json
# SIMULATED_ACCOMMODATION_DATA_PATH=data/mock_accommodations.json
# SIMULATED_ACTIVITY_DATA_PATH=data/mock_activities.json

# --- Other potential future configurations ---
# DATABASE_URL=postgresql://user:password@host:port/database_name
# STRIPE_SECRET_KEY=sk_live_XXXXXXXXXXXXXXXXXXXX
